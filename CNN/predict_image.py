import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
model_path = "digit_model.h5"
if not os.path.exists(model_path):
    raise FileNotFoundError("‚ùå –ú–æ–¥–µ–ª—å digit_model.h5 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏ –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ train_model.py")

model = tf.keras.models.load_model(model_path)
print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏
(_, _), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_test = x_test / 255.0  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
x_test = x_test[..., tf.newaxis]  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª

# –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
index = np.random.randint(0, len(x_test))
img = x_test[index]
true_label = y_test[index]

# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
img_input = img.reshape(1, 28, 28, 1)
pred = model.predict(img_input)
predicted_digit = np.argmax(pred)

# –í—ã–≤–æ–¥
plt.imshow(img[..., 0], cmap='gray')
plt.title(f"üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–æ: {predicted_digit}  |  –ò—Å—Ç–∏–Ω–Ω–æ–µ: {true_label}")
plt.axis('off')
plt.show()

# –†–µ–∑—É–ª—å—Ç–∞—Ç
print(f"\n‚úÖ –ò—Å—Ç–∏–Ω–Ω–∞—è —Ü–∏—Ñ—Ä–∞: {true_label}")
print(f"ü§ñ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å—é: {predicted_digit}")
